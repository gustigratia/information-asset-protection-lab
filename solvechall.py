from Crypto.Util.number import long_to_bytes
import gmpy2

e = 3
c = int("234429109782918898357946659418969828238366426268477498689653780557252268" \
    "312805504774830024769639424249042202718845485980766445733797865879300077793645930" \
    "900937285616667107543109615677395544450597026347207561805323832221127755063294497" \
    "2952128574619481153303321045511668987706883106816408769713058690096813388100618801" \
    "5835897701135653619411603896755264365588493353091588876292221883846233135618241090" \
    "56628841144631219564014897602033727802336373408793274102135597864")
g = int("1205095526777576753756847024206457276184081604211387773897627350749844419987" \
    "1887767403180170097289251517250563450741923892010644458668065104572122677069707")
A = int("445461648766359653880651797347827107913118204234914694179765906279303146884" \
    "5492590250220972656964845848862358234779851686655635425033976780511424646136324")
B = int("41241561682616701384416718354044699673455934576322029944591189839786808816" \
    "65901731998435347814290648119083726613759685795578080384055344519189024908147976")

shared_int = A ^ B ^ g

root, exact = gmpy2.iroot(c, e)
flag2_int = int(root)

flag_int = flag2_int ^ shared_int

flag_bytes = long_to_bytes(flag_int)
print(flag_bytes.decode())